openapi: 3.0.3
info:
  title: 'ANON - Anonymous Employee Platform'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/oauth/token:
    post:
      summary: "Authorize a client to access the user's account."
      operationId: authorizeAClientToAccessTheUsersAccount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/microsoft/validate:
    post:
      summary: ''
      operationId: postApiAuthMicrosoftValidate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/logout:
    post:
      summary: 'Handle logout'
      operationId: handleLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/user:
    get:
      summary: 'Get the authenticated user'
      operationId: getTheAuthenticatedUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user: null
                properties:
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  /api/posts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tbsdlfahpibjecuo
                  nullable: false
                body:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: id
                  nullable: false
              required:
                - title
                - body
                - category_id
      security: []
  '/api/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 19
        required: true
        schema:
          type: integer
  '/api/posts/{post_id}/upvote':
    post:
      summary: ''
      operationId: postApiPostsPost_idUpvote
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/posts/{post_id}/flag':
    post:
      summary: ''
      operationId: postApiPostsPost_idFlag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/posts/{post_id}/resolve':
    post:
      summary: ''
      operationId: postApiPostsPost_idResolve
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 7
        required: true
        schema:
          type: integer
  /api/comments:
    get:
      summary: 'Display comments for a post'
      operationId: displayCommentsForAPost
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 1000 characters.'
                  example: cggtpjgzqzwqqrn
                  nullable: false
                post_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the posts table.'
                  example: est
                  nullable: false
                parent_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the comments table.'
                  example: null
                  nullable: true
              required:
                - body
                - post_id
      security: []
  '/api/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 1000 characters.'
                  example: tvegsfnnzveqesg
                  nullable: false
                parent_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the comments table.'
                  example: null
                  nullable: true
              required:
                - body
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: quam
        required: true
        schema:
          type: string
  '/api/comments/{comment}/flag':
    post:
      summary: ''
      operationId: postApiCommentsCommentFlag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: comment
        description: 'The comment.'
        example: aut
        required: true
        schema:
          type: string
  '/api/posts/{post_id}/comments':
    get:
      summary: 'Display comments for a post'
      operationId: displayCommentsForAPost
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 6
        required: true
        schema:
          type: integer
  /api/categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: Policy
                    posts_count: 0
                    active_posts_count: 0
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Policy
                      posts_count:
                        type: integer
                        example: 0
                      active_posts_count:
                        type: integer
                        example: 0
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
